# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python library with poetry

on: [push]

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        extras: [true, false]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install Poetry
      uses: snok/install-poetry@v1.3.3
    - name: Cache Poetry virtualenv
      uses: actions/cache@v1
      id: cache
      with:
        path: ~/.virtualenvs
        key: poetry-${{ hashFiles('**/poetry.lock') }}-{{ matrix.os }}-${{ matrix.extras }}
        restore-keys: |
          poetry-${{ hashFiles('**/poetry.lock') }}-${{ matrix.extras }}
    - name: Set Poetry config
      run: |
        poetry config virtualenvs.in-project false
        poetry config virtualenvs.path ~/.virtualenvs
    - name: Install Dependencies
      run: poetry install
      if: ${{ steps.cache.outputs.cache-hit != 'true' && matrix.extras == false }}
    - name: Install Dependencies
      run: poetry install --all-extras
      if: ${{ steps.cache.outputs.cache-hit != 'true' && matrix.extras }}
    - name: Code Quality
      run: poetry run make lint

    - name: Test with pytest
      run: poetry run make test