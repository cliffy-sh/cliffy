name: town
version: 0.1.1

imports: |
  import re
  import time

functions:
  format_money:
    - "money: float"
    - |
      return "${:.2f}".format(money)

commands:
  land.build: print(f"building land {name}")
  land.sell: print(f"selling land {name}")
  land.buy: print(f"buying land {name} for {format_money(money)}")
  people.add: print(f"adding person {fullname}, {age}, {home}")
  people.remove: print(f"removing person {fullname}")
  shops.build: print(f"building shop {name} ({type}) on land {land}")
  shops.sell: print(f"selling shop {name} for ${money}")
  shops.buy: print(f"buying shop {name} for ${money}")
  home.build: print(f"building home at {address} for {owner} on land {land}")
  home.sell: print(f"selling home {address} for {format_money(money)}")
  home.buy: |
    print(f"buying home {address} for {money}")
    print("test123")
  (*).list: print(f"listing {{(*)}}")
  
args:
  land.build: [name: Name!, address: str!, --value|-v: int = 100]
  land.sell: [name: Name!, money: Money]
  land.buy: [name: Name!, money: Money]
  people.add: [fullname: str!, age: int!, --home|-h: str]
  people.remove: [fullname: str!]
  shops.build: [name: Name!, land: str!, --type|-t: str]
  shops.sell: [name: Name!, money: Money]
  shops.buy: [name: Name!, money: Money]
  home.build: [address: str!, land: str, owner: str]
  home.sell: [address: str!, money: Money]
  home.buy: [address: str!, money: Money]
  (*).list: [--limit|-l: int]

types:
  Money: float = typer.Option(..., help="Amount of money", min=0)
  Name: str = typer.Argument(..., help="Name")

# TODO
db: sqlite
